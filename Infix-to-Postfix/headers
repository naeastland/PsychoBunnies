/*************************************************************
Programmer: Nate Eastland
Class: Cpts 122, Spring 2015; Lab Section 6
Programming Assignment: PA3 - Evaluation of Infix Expressions using Stacks
Date: 2-16-2015
Description: This program translates infix expressions into postfix
			and evaluates them.
*************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MAX_SIZE 64

typedef struct stackNode
{
	char data;
	struct stackNode *nextPtr;
} StackNode;

typedef StackNode *StackNodePtr;

//from exercise 12.12
void acceptInfix();
void convertToPostfix(char infix[], char postfix[]);
int isOperator(char c);
int precendence(char operator1, char operator2);
void push(StackNodePtr *topPtr, char value);
char pop(StackNodePtr *topPtr);
char stackTop(StackNodePtr topPtr);
int isEmpty(StackNodePtr topPtr);

//from exercise 12.13
int evaluatePostfixExpression(char *expr);
int calculate(int op1, int op2, char opChar);
