`timescale 1ns / 1ps

module adder(
	input [3:0] A,
	input [3:0] B,
	input sub,
	output [3:0] S
    );
	 
	 wire [3:0] Carry;
	 wire [3:0] add_sub;
	 
	 assign add_sub[0] = A[0] ^ sub;
	 assign add_sub[1] = A[1] ^ sub;
	 assign add_sub[2] = A[2] ^ sub;
	 assign add_sub[3] = A[3] ^ sub;
	 
	 FA add_0 (
    .A(add_sub[0]), 
    .B(B[0]),
    .Cin(sub), 
    .S(S[0]), 
    .Cout(Carry[0])
    );
	 
//	 HA add_0 (
//    .A(A[0]), 
//    .B(B[0]), 
//    .S(S[0]), 
//    .Cout(Carry[0])
//    );
	 
	 FA add_1 (
    .A(add_sub[1]), 
    .B(B[1]), 
    .Cin(Carry[0]), 
    .S(S[1]), 
    .Cout(Carry[1])
    );
	 
	 FA add_2 (
    .A(add_sub[2]), 
    .B(B[2]), 
    .Cin(Carry[1]), 
    .S(S[2]), 
    .Cout(Carry[2])
    );
	 
	 FA add_3 (
    .A(add_sub[3]), 
    .B(B[3]), 
    .Cin(Carry[2]), 
    .S(S[3]), 
    .Cout(Carry[3])
    );


endmodule
