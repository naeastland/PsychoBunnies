`timescale 1ns / 1ps

module multiplier(
	input [3:0] A,
	input [3:0] B,
	output [7:0] R
    );
	 
	 wire [15:0] P;
	 wire [9:0] Sum;
	 wire [8:0] Carry;
	 
	 assign P[0] = A[0] & B[0];
	 assign P[1] = A[1] & B[0];
	 assign P[2] = A[2] & B[0];
	 assign P[3] = A[3] & B[0];
	 assign P[4] = A[0] & B[1];
	 assign P[5] = A[1] & B[1];
	 assign P[6] = A[2] & B[1];
	 assign P[7] = A[3] & B[1];
	 assign P[8] = A[0] & B[2];
	 assign P[9] = A[1] & B[2];
	 assign P[10] = A[2] & B[2];
	 assign P[11] = A[3] & B[2];
	 assign P[12] = A[0] & B[3];
	 assign P[13] = A[1] & B[3];
	 assign P[14] = A[2] & B[3];
	 assign P[15] = A[3] & B[3];
	 
	 assign R[0] = P[0];
	 
	 HA halfy1_1 (
    .A(P[1]), 
    .B(P[4]), 
    .S(R[1]), 
    .Cout(Carry[0])
    );
	 
	 FA full1_1 (
    .A(P[2]), 
    .B(P[5]), 
    .Cin(P[8]), 
    .S(Sum[0]), 
    .Cout(Carry[1])
    );
	 
	 FA full1_2 (
    .A(P[3]), 
    .B(P[6]), 
    .Cin(P[9]), 
    .S(Sum[1]), 
    .Cout(Carry[2])
    );
	 
	 HA halfy1_2(
    .A(P[7]), 
    .B(P[10]), 
    .S(Sum[2]), 
    .Cout(Carry[3])
    );
	 
	 HA halfy2_1 (
    .A(Sum[0]), 
    .B(Carry[0]), 
    .S(R[2]), 
    .Cout(Carry[4])
    );
	 
	 FA full2_1 (
    .A(Sum[1]), 
    .B(P[12]), 
    .Cin(Carry[1]), 
    .S(Sum[3]), 
    .Cout(Carry[5])
    );
	 
	 FA full2_2 (
    .A(Sum[2]), 
    .B(P[13]), 
    .Cin(Carry[2]), 
    .S(Sum[4]), 
    .Cout(Carry[6])
    );
	 
	 FA full2_3 (
    .A(P[11]), 
    .B(P[14]), 
    .Cin(Carry[3]), 
    .S(Sum[5]), 
    .Cout(Carry[7])
    );
	 
	 cla cla_0 (
    .A({P[15], Sum[5:3]}), 
    .B({Carry[7:4]}), 
    .R({R[6:3]}), 
    .Cout(R[7])
    );

endmodule
